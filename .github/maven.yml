# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      docker:
        image: hrchu/mogilefs-all-in-one:version-1.1.5
        ports:
          - 7001:7001
          - 7500:7500
        options: >-
          --env DOMAIN_NAME=testdomain
          --env CLASS_NAMES="testclass1 testclass2"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetches the full git history
      - name: Wait for service to be ready
        run: |
          for i in $(seq 1 60); do
            nc -zv 127.0.0.1 7001 && break
            echo "Waiting for service to be ready..."
            sleep 1
          done
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'       # Specify Java 8 version
          distribution: 'temurin' # You can also specify another distribution like 'zulu', 'adopt'
      - name: Run Maven tests
        run: mvn verify
      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6